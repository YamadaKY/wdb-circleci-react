executors:
  default: # デフォルトのDockerイメージ
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
  deploy: # デプロイ用のDockerイメージ
    docker:
      - image: circleci/python
    working_directory: ~/repo

version: 2.1
jobs:
  checkout_code: # ソースコードを取得
    executor: default
    steps:
      - checkout
      - save_cache: # ソースコードをキャッシュ
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  node_dependencies:
    executor: default
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # Yarnキャッシュを復元
          key: v1-yarn-{{ checksum "yarn.lock" }}
      - restore_cache: # node_modulesを復元
          key: v1-node-{{ checksum "package.json" }}
      - run:
          name: Yarn Install
          command: yarn install
      - save_cache: # Yarnキャッシュをキャッシュ
          key: v1-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache: # node_modulesをキャッシュ
          key: v1-node-{{ checksum "package.json" }}
          paths:
            - node_modules

  test_eslint:
    executor: default
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # node_modulesを復元
          key: v1-node-{{ checksum "package.json" }}
      - run:
          name: ESLintを実行
          command: |
            yarn lint --format junit \
            -o test_results/eslint.xml
      - store_test_results: # テストレポートを保存
          path: test_results

  test_jest:
    executor: default
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # node_modulesを復元
          key: v1-node-{{ checksum "package.json" }}
      - run:
          name: Jestを実行
          command: |
            yarn test --ci --reporters=default \
            --reporters=jest-junit
          environment: # テストレポートの出力先を指定
            JEST_JUNIT_OUTPUT: "test_results/jest.xml"
      - store_test_results: # テストレポートを保存
          path: test_results

  build:
    executor: default
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # node_modulesを復元
          key: v1-node-{{ checksum "package.json" }}
      - run:
          name: ビルドを実行
          command: yarn build
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo/build

  deploy_s3:
    executor: deploy
    steps:
      - restore_cache:
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: AWS CLIのインストール
          command: sudo pip install awscli
      - deploy:
          name: S3へデプロイ
          command: aws s3 sync build s3://${S3_BUCKET}/ --delete

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - node_dependencies:
          requires: # checkout_codeのあとに実行
            - checkout_code
      - test_eslint:
          requires: # node_dependenciesのあとに実行
            - node_dependencies
      - test_jest:
          requires: # node_dependenciesのあとに実行
            - node_dependencies
      - build:
          requires: # node_dependenciesのあとに実行
            - node_dependencies
      - deploy_s3:
          requires: # buildのあとに実行
            - build
